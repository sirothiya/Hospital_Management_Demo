
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Calendar;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author win-8
 */
public class Patient_Registration extends javax.swing.JFrame {

    /**
     * Creates new form Patient_Registration
     */
    public Patient_Registration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        idlbl = new javax.swing.JLabel();
        nametf = new javax.swing.JTextField();
        addresstf = new javax.swing.JTextField();
        gendercb = new javax.swing.JComboBox();
        dobtf = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        contacttf = new javax.swing.JTextField();
        blood_grpcb = new javax.swing.JComboBox();
        admitrb = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        diseasetf = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        doctorlist = new javax.swing.JList<>();
        jLabel20 = new javax.swing.JLabel();
        showrb = new javax.swing.JRadioButton();
        doctorlbl = new javax.swing.JLabel();
        admitlbl = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        datetf = new javax.swing.JFormattedTextField();
        jLabel23 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        searchtf = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        new1 = new javax.swing.JButton();
        save = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        remarkta = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 204, 102));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 204, 102), null));
        jPanel3.setLayout(null);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/entry.png"))); // NOI18N
        jPanel3.add(jLabel17);
        jLabel17.setBounds(80, 180, 120, 121);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 204, 102), null));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Entry"));

        jLabel1.setText("Patient ID");

        jLabel2.setText("Name");

        jLabel5.setText("Address");

        jLabel6.setText("Gender");

        jLabel7.setText("Date of Birth");

        jLabel8.setText("Contact Number");

        jLabel12.setText("Blood Group");

        gendercb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));

        dobtf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        jLabel15.setText("(DD/MM/YYYY)");

        contacttf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contacttfKeyTyped(evt);
            }
        });

        blood_grpcb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A+", "B+", "AB+", "O+", "A-", "B-", "AB-", "O-" }));
        blood_grpcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blood_grpcbActionPerformed(evt);
            }
        });

        admitrb.setBackground(new java.awt.Color(255, 255, 255));
        admitrb.setText("Admit Patient");
        admitrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admitrbActionPerformed(evt);
            }
        });

        jLabel13.setText("Disease");

        doctorlist.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                doctorlistValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(doctorlist);

        jLabel20.setText("Doctor");

        showrb.setBackground(new java.awt.Color(255, 255, 255));
        showrb.setText("Show All");
        showrb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showrbItemStateChanged(evt);
            }
        });
        showrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showrbActionPerformed(evt);
            }
        });

        jLabel22.setText("Checkup Date");

        datetf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        jLabel23.setText("(DD/MM/YYYY)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addresstf)
                            .addComponent(nametf)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(gendercb, 0, 117, Short.MAX_VALUE)
                                    .addComponent(dobtf))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addComponent(jLabel15))
                            .addComponent(contacttf)
                            .addComponent(diseasetf, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(blood_grpcb, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(doctorlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(datetf))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(showrb)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel23))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(admitrb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(admitlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(idlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nametf, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addresstf, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gendercb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dobtf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(contacttf, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blood_grpcb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(diseasetf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doctorlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(showrb))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datetf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(admitlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(admitrb)
                .addContainerGap())
        );

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("<<-");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(0, 204, 102));
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel5.setLayout(null);

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("X");
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });
        jPanel5.add(jLabel21);
        jLabel21.setBounds(10, 0, 20, 30);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        jLabel19.setText("ID");

        searchtf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));

        jButton1.setText("Search");
        jButton1.setMaximumSize(new java.awt.Dimension(67, 23));
        jButton1.setMinimumSize(new java.awt.Dimension(67, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchtf)
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchtf, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Action"));

        new1.setText("New");
        new1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new1ActionPerformed(evt);
            }
        });

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.setEnabled(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(update)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(new1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(new1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(save)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(update)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Patient Registration");
        jLabel18.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 204, 102), null));
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel16.setText("Remark and Prescription :");

        remarkta.setColumns(15);
        remarkta.setLineWrap(true);
        remarkta.setRows(5);
        jScrollPane1.setViewportView(remarkta);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(132, 132, 132)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(276, 276, 276)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        new MainMenu().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        System.exit(WIDTH);
    }//GEN-LAST:event_jLabel21MouseClicked

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
String id = idlbl.getText();
String name = nametf.getText();
String disease = diseasetf.getText();
String dob = dobtf.getText();
String gender = (String)gendercb.getSelectedItem();
String address = addresstf.getText();
String contact = contacttf.getText();
String blood_grp = (String)blood_grpcb.getSelectedItem();
String remark = remarkta.getText();
String str = (String)doctorlist.getSelectedValue();
String date = datetf.getText();
char ch=1;int x=0;
String doctor_id="";
if(doctorlist.getSelectedIndex()!=-1)
while(true)
{  
   
   ch = str.charAt(x);
   if(ch==' ')
       break;
   doctor_id=doctor_id+ch;
   x++;
   
}
if(name.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Name");
else if(disease.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Disease");
else if(address.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Address");
else if(dob.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Date Of Birth");
else if(!(contact.length()==10))
    JOptionPane.showMessageDialog(null,"Enter Valid Contact Number");
else if(remark.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Remark And Prescription");
else if(date.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Check Up Date");
else if(doctorlist.getSelectedIndex()==-1)
    JOptionPane.showMessageDialog(null,"Select Doctor");
else
{
try{
    Class.forName("java.sql.Driver");
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost/hospital","root","tiger");
    Statement smt=con.createStatement();
    String query = "select name from doctor where doctor_id = '"+doctor_id+"';";
    String doctor_name="";
    ResultSet rs1 = smt.executeQuery(query);
    if(rs1.next())
       doctor_name = rs1.getString("name");
    String sq="insert into patient values('"+id+"','"+name+"','"+address+"','"+gender+"','"+dob+"','"+contact+"','"+blood_grp+"','"+disease+"','"+doctor_id+"','"+doctor_name+"','"+remark+"','No','"+date+"');";
    int rs=smt.executeUpdate(sq); 
    JOptionPane.showMessageDialog(null,"Patient Registered !");
    rs1.close();
    smt.close();
    con.close();
    String txt = idlbl.getText(); 
    idlbl.setText("");
    nametf.setText("");
    diseasetf.setText("");
    addresstf.setText("");
    gendercb.setSelectedItem("Male");
    dobtf.setText("");
    contacttf.setText("");
    blood_grpcb.setSelectedItem("A+");
    remarkta.setText("");
    datetf.setText("");
    if(admitrb.isSelected())
    {
        this.dispose();
        new Patient_Admit().setVisible(true);
        Patient_ID obj = new Patient_ID(txt);
    }
    new1.doClick();
    save.setEnabled(false);
    }
catch(Exception e){
    JOptionPane.showMessageDialog(null,"Error in Connection");
} 
}// TODO add your handling code here:
    }//GEN-LAST:event_saveActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
String name = nametf.getText();
String disease = diseasetf.getText();
String gender = (String)gendercb.getSelectedItem();
String address = addresstf.getText();
String contact = contacttf.getText();
String dob = dobtf.getText();
String remark = remarkta.getText();
String blood_grp = (String)blood_grpcb.getSelectedItem();
String date = datetf.getText();
String str = (String)doctorlist.getSelectedValue();
char ch=1;int x=0;
String doctor_id="";
while(true)
{  
   ch = str.charAt(x);
   if(ch==' ')
       break;
   doctor_id=doctor_id+ch;
   x++;   
}
int len = contact.length();
if(name.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Name");
else if(disease.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Disease");
else if(dob.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Date Of Birth");
else if(address.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Address");
else if(remark.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Date Of Remark");
else if(date.equals(""))
    JOptionPane.showMessageDialog(null,"Enter Check Up Date");
else if(!(len==10))
    JOptionPane.showMessageDialog(null,"Enter Valid Contact Number");
else if(doctor_id.equals(""))
    JOptionPane.showMessageDialog(null,"Select_Doctor");
else{
    try{
    Class.forName("java.sql.Driver");
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost/hospital","root","tiger");
    Statement smt=con.createStatement();
    String query = "select name from doctor where doctor_id = '"+doctor_id+"';";
    String doctor_name="";
    ResultSet rs1 = smt.executeQuery(query);
    if(rs1.next())
       doctor_name = rs1.getString("name");
    String sq="update patient set name = '"+name+"', dob = '"+dob+"', gender = '"+gender+"', address = '"+address+"', contact = '"+contact+"', disease = '"+disease+"', blood_group = '"+blood_grp+"', doctor_name = '"+doctor_name+"', doctor_id = '"+doctor_id+"', checkup_date = '"+date+"', remark = '"+ remark +"' where patient_id='"+idlbl.getText()+"';";
    int rs=smt.executeUpdate(sq);
    JOptionPane.showMessageDialog(null,"Information Updated");
    smt.close();
    con.close();
    idlbl.setText("");
    nametf.setText("");
    diseasetf.setText("");
    addresstf.setText("");
    gendercb.setSelectedItem("Male");
    dobtf.setText("");
    contacttf.setText("");
    blood_grpcb.setSelectedItem("A+");
    remarkta.setText("");
    datetf.setText("");
    update.setEnabled(false);
    save.setEnabled(false);
    new1.doClick();
    }
catch(Exception e){
    JOptionPane.showMessageDialog(null,"Error in Connection");
}
}// TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void blood_grpcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blood_grpcbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blood_grpcbActionPerformed

    private void admitrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admitrbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_admitrbActionPerformed

    private void new1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new1ActionPerformed
admitlbl.setVisible(false);
showrb.setSelected(false);
doctorlbl.setText("");
DefaultListModel model = new DefaultListModel();
model.clear();
doctorlist.setModel(model);
showrb.setVisible(false);
int max = 0,x=0;
String id="", name="";
try{        
            Class.forName("java.sql.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/hospital","root","tiger");
            Statement smt=con.createStatement();
            String sq="select max(patient_id) from patient;";
            ResultSet rs=smt.executeQuery(sq);
            if(rs.next())
            {
                max = rs.getInt(1);
            }
            max=max+1;
            idlbl.setText(""+max);
            nametf.setText("");
            diseasetf.setText("");
            addresstf.setText("");
            gendercb.setSelectedItem("Male");
            dobtf.setText("");
            contacttf.setText("");
            blood_grpcb.setSelectedItem("A+");
            remarkta.setText("");
            Calendar c =Calendar.getInstance();
            String dt = ""+c.get(Calendar.DATE)+"/"+(c.get(Calendar.MONTH)+1)+"/"+c.get(Calendar.YEAR);
            datetf.setText(dt);
            String query ="select doctor_id, name from doctor where status = 'Working';";
            rs=smt.executeQuery(query);
            while(rs.next())
            {
                id = rs.getString("doctor_id");
                name = rs.getString("name");
                model.add(x,id+" - "+name);
                x++;
            }
            doctorlist.setModel(model);
            rs.close();
            smt.close();
            con.close();
            save.setEnabled(true);
            searchtf.setText("");
            update.setEnabled(false);
}
catch(Exception e)
{
    System.out.print("error");
}        // TODO add your handling code here:
    }//GEN-LAST:event_new1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
showrb.setVisible(false);
showrb.setSelected(false);
int max = 0,x=0;
String id="", name="";
try{        
            Class.forName("java.sql.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/hospital","root","tiger");
            Statement smt=con.createStatement();
            String sq="select max(patient_id) from patient;";
            ResultSet rs=smt.executeQuery(sq);
            if(rs.next())
            {
                max = rs.getInt(1);
            }
            max=max+1;
            idlbl.setText(""+max);
            nametf.setText("");
            diseasetf.setText("");
            addresstf.setText("");
            gendercb.setSelectedItem("Male");
            dobtf.setText("");
            contacttf.setText("");
            blood_grpcb.setSelectedItem("A+");
            remarkta.setText("");
            Calendar c =Calendar.getInstance();
            String dt = ""+c.get(Calendar.DATE)+"/"+(c.get(Calendar.MONTH)+1)+"/"+c.get(Calendar.YEAR);
            datetf.setText(dt);
            DefaultListModel model = new DefaultListModel();
            String query ="select doctor_id, name from doctor where status = 'Working';";
            rs=smt.executeQuery(query);
            while(rs.next())
            {
                id = rs.getString("doctor_id");
                name = rs.getString("name");
                model.add(x,id+" - "+name);
                x++;
            }
            doctorlist.setModel(model); 
            rs.close();
            smt.close();
            con.close();
            save.setEnabled(true);
            searchtf.setText("");
            update.setEnabled(false);
}
catch(Exception e)
{
    System.out.print("error");
}        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void doctorlistValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_doctorlistValueChanged
if(update.isEnabled())
    ;
else
    doctorlbl.setText(doctorlist.getSelectedValue());
   
// TODO add your handling code here:
    }//GEN-LAST:event_doctorlistValueChanged

    private void contacttfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contacttfKeyTyped
char ch = evt.getKeyChar();
if((ch<48 || ch>57))
{
    evt.consume();    
}
String txt = contacttf.getText();
int len = txt.length();
if(len==0)
{
    if((ch<=48 || ch>57))
{
    evt.consume();    
}

}
if(len>9)
    evt.consume();       // TODO add your handling code here:
    }//GEN-LAST:event_contacttfKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
showrb.setSelected(false);
admitlbl.setText("");
admitrb.setVisible(false);
doctorlbl.setText("");
DefaultListModel model = new DefaultListModel();
model.clear();
doctorlist.setModel(model);
try{        
            Class.forName("java.sql.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/hospital","root","tiger");
            Statement smt=con.createStatement();
            String sq="select * from patient where patient_id = '"+searchtf.getText()+"';";
            ResultSet rs=smt.executeQuery(sq);
            String id="",name="",disease="",address="",gender="",dob="",contact="",blood_grp="",admit="",remark="",doctor="",doctor_name="",doctor_id="",date="";
            if(rs.next())
            {
                id=rs.getString("patient_id");
                name=rs.getString("name");
                disease=rs.getString("disease");
                address=rs.getString("address");
                gender=rs.getString("gender");
                dob=rs.getString("dob");
                contact=rs.getString("contact");
                blood_grp=rs.getString("blood_group");
                remark=rs.getString("remark");
                doctor_name=rs.getString("doctor_name");
                doctor_id=rs.getString("doctor_id");
                admit = rs.getString("admit");
                date = rs.getString("checkup_date");
            }
            doctor=doctor_id+" - "+doctor_name;
            if(id.equals(""))
            {
                JOptionPane.showMessageDialog(null,"Enter valid ID");
                searchtf.setText("");
                idlbl.setText(id);
                nametf.setText(name);
                diseasetf.setText(disease);
                dobtf.setText(dob);
                gendercb.setSelectedItem(gender);
                addresstf.setText(address);
                contacttf.setText(contact);
                blood_grpcb.setSelectedItem(blood_grp);
                remarkta.setText(remark);
                datetf.setText(date);
                save.setEnabled(false);
                update.setEnabled(false);      
            }
            else
            {
                idlbl.setText(id);
                nametf.setText(name);
                diseasetf.setText(disease);
                dobtf.setText(dob);
                gendercb.setSelectedItem(gender);
                addresstf.setText(address);
                contacttf.setText(contact);
                datetf.setText(date);
                blood_grpcb.setSelectedItem(blood_grp);
                remarkta.setText(remark);
                model.add(0,doctor);
                doctorlist.setModel(model);
                doctorlbl.setText(doctor);
                doctorlist.setSelectedIndex(0);
                if(admit.equals("Yes"))
                    admitlbl.setText("Admitted");
                showrb.setVisible(true);
                save.setEnabled(false);
                update.setEnabled(true);
            }
            rs.close();
            smt.close();
            con.close();
}
catch(Exception e)
{
    System.out.print("error");
}        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void showrbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showrbItemStateChanged
DefaultListModel model = new DefaultListModel();
model.clear();
doctorlist.setModel(model); 
int max = 0,x=0;
String id="", name="";
try{        
            Class.forName("java.sql.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost/hospital","root","tiger");
            Statement smt=con.createStatement();
            String query ="select doctor_id, name from doctor;";
            ResultSet rs=smt.executeQuery(query);
            while(rs.next())
            {
                id = rs.getString("doctor_id");
                name = rs.getString("name");
                model.add(x,id+" - "+name);
                x++;
            }
            doctorlist.setModel(model); 
            rs.close();
            smt.close();
            con.close();
            
}
catch(Exception e)
{
    System.out.print("error");
}// TODO add your handling code here:
    }//GEN-LAST:event_showrbItemStateChanged

    private void showrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showrbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showrbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Patient_Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Patient_Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Patient_Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Patient_Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Patient_Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addresstf;
    private javax.swing.JLabel admitlbl;
    private javax.swing.JRadioButton admitrb;
    private javax.swing.JComboBox blood_grpcb;
    private javax.swing.JTextField contacttf;
    private javax.swing.JFormattedTextField datetf;
    private javax.swing.JTextField diseasetf;
    private javax.swing.JFormattedTextField dobtf;
    private javax.swing.JLabel doctorlbl;
    private javax.swing.JList<String> doctorlist;
    private javax.swing.JComboBox gendercb;
    private javax.swing.JLabel idlbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nametf;
    private javax.swing.JButton new1;
    private javax.swing.JTextArea remarkta;
    private javax.swing.JButton save;
    private javax.swing.JFormattedTextField searchtf;
    private javax.swing.JRadioButton showrb;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
